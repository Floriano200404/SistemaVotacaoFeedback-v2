/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.edu.ifro.calama.votacaofeedback.view;

import br.edu.ifro.calama.votacaofeedback.model.Usuario;
import br.edu.ifro.calama.votacaofeedback.model.Votacao;
import br.edu.ifro.calama.votacaofeedback.repository.VotacaoRepository;
import br.edu.ifro.calama.votacaofeedback.util.ToastUtil;
import javax.swing.Timer;

/**
 *
 * @author floriano
 */
public class CriarVotacaoOpcoesView extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(CriarVotacaoOpcoesView.class.getName());
    private Usuario usuarioLogado;
    private Votacao votacaoEmAndamento;

    /**
     * Creates new form CriarVotacaoOpcoesView
     */
    public CriarVotacaoOpcoesView(Usuario usuario, Votacao votacao) {
        initComponents();
        
        this.usuarioLogado = usuario;
        this.votacaoEmAndamento = votacao;
        
        if (this.usuarioLogado != null) {
            // No modo Design, dê um nome de variável para o JLabel que mostra o nome
            // (ex: labelNomeUsuario) e use-o aqui.
            labelNomeUsuario.setText(this.usuarioLogado.getNome());
        }
        
        inicializarMenuLateral();
    }
    
    public void exibirMensagem(String mensagem) {

        ToastUtil toast = new ToastUtil(this, mensagem, ToastUtil.ToastType.ERROR, ToastUtil.ToastPosition.TOP_CENTER);
        toast.display();
    }

    public void exibirMensagemDeSucesso(String mensagem) {

        ToastUtil toast = new ToastUtil(this, mensagem, ToastUtil.ToastType.SUCCESS, ToastUtil.ToastPosition.BOTTOM_RIGHT);
        toast.display();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelHeader = new javax.swing.JPanel();
        painelHeaderEsquerda = new javax.swing.JPanel();
        labelIconeMenu = new javax.swing.JLabel();
        labelLogo = new javax.swing.JLabel();
        painelHeaderDireita = new javax.swing.JPanel();
        labelNomeUsuario = new javax.swing.JLabel();
        labelIconePerfil = new javax.swing.JLabel();
        painelSidebar = new javax.swing.JPanel();
        menutxt = new javax.swing.JLabel();
        criarVotacao = new javax.swing.JButton();
        participarVotacao = new javax.swing.JButton();
        gerenciaVotacao = new javax.swing.JButton();
        aprovarVotacao = new javax.swing.JButton();
        votoArquivado = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 32767));
        PainelConteudo = new javax.swing.JPanel();
        TituloPrincipal = new javax.swing.JLabel();
        TituloP = new javax.swing.JLabel();
        txtPergunta = new javax.swing.JTextField();
        TituloO1 = new javax.swing.JLabel();
        txtOpcao1 = new javax.swing.JTextField();
        TituloO2 = new javax.swing.JLabel();
        txtOpcao2 = new javax.swing.JTextField();
        btnAdicionarOpcao = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        painelHeader.setBackground(new java.awt.Color(0, 0, 51));
        painelHeader.setPreferredSize(new java.awt.Dimension(100, 50));
        painelHeader.setLayout(new java.awt.BorderLayout());

        painelHeaderEsquerda.setOpaque(false);
        painelHeaderEsquerda.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 30, 5));

        labelIconeMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/menu.png"))); // NOI18N
        labelIconeMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelIconeMenuMouseClicked(evt);
            }
        });
        painelHeaderEsquerda.add(labelIconeMenu);

        labelLogo.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelLogo.setForeground(new java.awt.Color(255, 255, 255));
        labelLogo.setText("OCTACORE");
        labelLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                labelLogoMouseClicked(evt);
            }
        });
        painelHeaderEsquerda.add(labelLogo);

        painelHeader.add(painelHeaderEsquerda, java.awt.BorderLayout.LINE_START);

        painelHeaderDireita.setOpaque(false);
        painelHeaderDireita.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT, 20, 5));

        labelNomeUsuario.setFont(new java.awt.Font("Silom", 0, 14)); // NOI18N
        labelNomeUsuario.setForeground(new java.awt.Color(255, 255, 255));
        labelNomeUsuario.setText("Nome Usuario");
        painelHeaderDireita.add(labelNomeUsuario);

        labelIconePerfil.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/user.png"))); // NOI18N
        painelHeaderDireita.add(labelIconePerfil);

        painelHeader.add(painelHeaderDireita, java.awt.BorderLayout.LINE_END);

        getContentPane().add(painelHeader, java.awt.BorderLayout.PAGE_START);

        painelSidebar.setBackground(new java.awt.Color(255, 255, 255));
        painelSidebar.setPreferredSize(new java.awt.Dimension(230, 0));
        painelSidebar.setLayout(new javax.swing.BoxLayout(painelSidebar, javax.swing.BoxLayout.Y_AXIS));
        painelSidebar.add(menutxt);

        criarVotacao.setText("Criar Votação");
        criarVotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                criarVotacaoActionPerformed(evt);
            }
        });
        painelSidebar.add(criarVotacao);

        participarVotacao.setText("Participar de Votação ");
        participarVotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                participarVotacaoActionPerformed(evt);
            }
        });
        painelSidebar.add(participarVotacao);

        gerenciaVotacao.setText("Gerenciar Votação");
        gerenciaVotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gerenciaVotacaoActionPerformed(evt);
            }
        });
        painelSidebar.add(gerenciaVotacao);

        aprovarVotacao.setText("Aprovar Votações\n");
        aprovarVotacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aprovarVotacaoActionPerformed(evt);
            }
        });
        painelSidebar.add(aprovarVotacao);

        votoArquivado.setText("Votações Arquivadas");
        painelSidebar.add(votoArquivado);
        painelSidebar.add(filler1);

        getContentPane().add(painelSidebar, java.awt.BorderLayout.LINE_START);

        TituloPrincipal.setText("CRIAR VOTAÇÃO - OPÇÕES");

        TituloP.setText("Pergunta");

        txtPergunta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPerguntaActionPerformed(evt);
            }
        });

        TituloO1.setText("Opção 1");

        TituloO2.setText("Opção 2");

        txtOpcao2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOpcao2ActionPerformed(evt);
            }
        });

        btnAdicionarOpcao.setText("Adicionar Opção.");
        btnAdicionarOpcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarOpcaoActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PainelConteudoLayout = new javax.swing.GroupLayout(PainelConteudo);
        PainelConteudo.setLayout(PainelConteudoLayout);
        PainelConteudoLayout.setHorizontalGroup(
            PainelConteudoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PainelConteudoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(TituloPrincipal)
                .addGap(22, 22, 22))
            .addGroup(PainelConteudoLayout.createSequentialGroup()
                .addComponent(btnAdicionarOpcao)
                .addGap(27, 27, 27)
                .addComponent(btnVoltar)
                .addGap(18, 18, 18)
                .addComponent(btnFinalizar)
                .addGap(0, 938, Short.MAX_VALUE))
            .addGroup(PainelConteudoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PainelConteudoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TituloP)
                    .addComponent(TituloO1)
                    .addComponent(TituloO2)
                    .addComponent(txtPergunta, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(txtOpcao1)
                    .addComponent(txtOpcao2))
                .addContainerGap(1089, Short.MAX_VALUE))
        );
        PainelConteudoLayout.setVerticalGroup(
            PainelConteudoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PainelConteudoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TituloPrincipal)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TituloP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtPergunta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TituloO1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOpcao1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TituloO2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtOpcao2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PainelConteudoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarOpcao)
                    .addComponent(btnVoltar)
                    .addComponent(btnFinalizar))
                .addContainerGap(549, Short.MAX_VALUE))
        );

        getContentPane().add(PainelConteudo, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void labelIconeMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelIconeMenuMouseClicked
        // Animação da sidebar em uma nova Thread para não travar a interface
        new Thread(new Runnable() {
            @Override
            public void run() {
                // Lógica robusta: se a largura for maior que 0, ele fecha. Senão, abre.
                if (painelSidebar.getWidth() > 0) {
                    try {
                        // Animação para fechar, começando da largura atual
                        for (int i = painelSidebar.getWidth(); i >= 0; i--) {
                            painelSidebar.setSize(i, painelSidebar.getHeight());
                            Thread.sleep(1);
                        }
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                } else {
                    try {
                        // Animação para abrir, de 0 até a largura desejada (210)
                        for (int i = 0; i <= 210; i++) {
                            painelSidebar.setSize(i, painelSidebar.getHeight());
                            Thread.sleep(1);
                        }
                    } catch (InterruptedException ex) {
                        System.out.println(ex);
                    }
                }
            }
        }).start();
    }//GEN-LAST:event_labelIconeMenuMouseClicked

    private void labelLogoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_labelLogoMouseClicked
        MenuPrincipalView telaDeCriacao = new MenuPrincipalView(this.usuarioLogado);

        telaDeCriacao.setLocationRelativeTo(null);
        telaDeCriacao.setVisible(true);

        this.dispose();
    }//GEN-LAST:event_labelLogoMouseClicked

    private void criarVotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_criarVotacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_criarVotacaoActionPerformed

    private void participarVotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_participarVotacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_participarVotacaoActionPerformed

    private void gerenciaVotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gerenciaVotacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_gerenciaVotacaoActionPerformed

    private void aprovarVotacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aprovarVotacaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_aprovarVotacaoActionPerformed

    private void btnAdicionarOpcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarOpcaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAdicionarOpcaoActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        
        CriarVotacaoView telaCriarVotacao = new CriarVotacaoView(this.usuarioLogado, votacaoEmAndamento);
        
        telaCriarVotacao.setLocationRelativeTo(null);
        telaCriarVotacao.setVisible(true);
        
        this.dispose();
                
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        try {     
            // 1. Coletar os dados desta segunda tela (usando os nomes do seu Navigator)
            String pergunta = txtPergunta.getText();
        
        // Validação simples
            if (pergunta.trim().isEmpty()) {
                exibirMensagem("O campo 'Pergunta' é obrigatório para finalizar.");
                return;
        }

        // 2. Completar o objeto 'votacaoEmAndamento' que já temos
        this.votacaoEmAndamento.setPergunta(pergunta);
        this.votacaoEmAndamento.setStatus("PENDENTE"); // Definimos o status final
            
            VotacaoRepository repository = new VotacaoRepository();
            repository.criar(this.votacaoEmAndamento);

        // Feedback de sucesso e navegação
            exibirMensagemDeSucesso("Votação e opções criadas com sucesso!");
            Timer timer = new Timer(1500, e -> {
                new MenuPrincipalView(this.usuarioLogado).setVisible(true);
                this.dispose();
            });
            timer.setRepeats(false);
            timer.start();

        } catch (Exception e) {
            exibirMensagem("Ocorreu um erro ao finalizar a votação");
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void txtPerguntaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPerguntaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPerguntaActionPerformed

    private void txtOpcao2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOpcao2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOpcao2ActionPerformed
private void inicializarMenuLateral() {
    // Coloca todos os botões em uma lista para fácil acesso
     java.util.List<javax.swing.JButton> botoes = java.util.Arrays.asList(
        criarVotacao, participarVotacao, gerenciaVotacao, aprovarVotacao, votoArquivado
    );
    // 1. Aplica o estilo visual INICIAL a cada botão
    configurarBotao(criarVotacao, "criarVoto.png");
    configurarBotao(participarVotacao, "peoplemais.png");
    configurarBotao(gerenciaVotacao, "configpast.png");
    configurarBotao(aprovarVotacao, "list_check.png");
    configurarBotao(votoArquivado, "arquivada.png");

    // 2. Adiciona os eventos de mouse e clique a todos os botões
    for (javax.swing.JButton botao : botoes) {
        adicionarListeners(botao);
    }

   
}

// MÉTODO que aplica a APARÊNCIA BASE (ícones, fonte, bordas, etc.)
private void configurarBotao(javax.swing.JButton botao, String nomeIcone) {
    // Estilo visual "flat"
   botao.putClientProperty("JButton.buttonType", "toolBarButton");
    
    // Alinhamento e cursor
    botao.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
    botao.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    
    // Espaçamentos internos e entre ícone/texto
    botao.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 15, 8, 15));
    botao.setIconTextGap(15);

    // Fonte
    botao.setFont(new java.awt.Font("Segoe UI", java.awt.Font.BOLD, 14));

    // Tenta carregar o ícone
    try {
        botao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/" + nomeIcone)));
    } catch (Exception e) {
        System.out.println("ERRO ao carregar ícone: " + nomeIcone);
    }
}


// MÉTODO "GERENTE" que atualiza as CORES (ativo/inativo)


// MÉTODO que adiciona a INTERATIVIDADE (mouse e clique)
// Este método agora só cuida do HOVER e do CLIQUE simples
private void adicionarListeners(javax.swing.JButton botao) {
    // Define as cores que vamos usar
    final java.awt.Color COR_FUNDO_SIDEBAR = painelSidebar.getBackground(); // A cor de fundo da sidebar (branco)
    final java.awt.Color COR_HOVER_AZUL = new java.awt.Color(235, 240, 255); // O azul bem clarinho do Figma

    // Adiciona os eventos de mouse para o efeito de HOVER
    botao.addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
        public void mouseEntered(java.awt.event.MouseEvent evt) {
            // Quando o mouse entra, o fundo do botão fica azul claro
            botao.setBackground(COR_HOVER_AZUL);
            botao.setOpaque(true); // Precisamos disso para a cor de fundo aparecer
        }

        @Override
        public void mouseExited(java.awt.event.MouseEvent evt) {
            // Quando o mouse sai, o fundo volta a ser transparente
            botao.setOpaque(false);
            // A linha abaixo é opcional, mas garante a cor certa
            botao.setBackground(COR_FUNDO_SIDEBAR); 
        }
    });

    // Adiciona a AÇÃO DE CLIQUE (que agora não faz nenhuma mudança visual)
    botao.addActionListener(e -> {
        System.out.println("Botão '" + botao.getText() + "' clicado!");
        // Futuramente, aqui entrará a lógica do CardLayout para trocar a tela
    });
}
    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PainelConteudo;
    private javax.swing.JLabel TituloO1;
    private javax.swing.JLabel TituloO2;
    private javax.swing.JLabel TituloP;
    private javax.swing.JLabel TituloPrincipal;
    private javax.swing.JButton aprovarVotacao;
    private javax.swing.JButton btnAdicionarOpcao;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JButton criarVotacao;
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton gerenciaVotacao;
    private javax.swing.JLabel labelIconeMenu;
    private javax.swing.JLabel labelIconePerfil;
    private javax.swing.JLabel labelLogo;
    private javax.swing.JLabel labelNomeUsuario;
    private javax.swing.JLabel menutxt;
    private javax.swing.JPanel painelHeader;
    private javax.swing.JPanel painelHeaderDireita;
    private javax.swing.JPanel painelHeaderEsquerda;
    private javax.swing.JPanel painelSidebar;
    private javax.swing.JButton participarVotacao;
    private javax.swing.JTextField txtOpcao1;
    private javax.swing.JTextField txtOpcao2;
    private javax.swing.JTextField txtPergunta;
    private javax.swing.JButton votoArquivado;
    // End of variables declaration//GEN-END:variables
}
