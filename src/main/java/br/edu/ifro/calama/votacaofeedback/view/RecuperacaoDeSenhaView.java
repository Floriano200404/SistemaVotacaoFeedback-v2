/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.edu.ifro.calama.votacaofeedback.view;

import javax.swing.JOptionPane;
import java.awt.Component;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import javax.swing.JPanel;
import javax.swing.SwingWorker;

/**
 *
 * @author USER
 */
public class RecuperacaoDeSenhaView extends javax.swing.JPanel {

    private JPanel painelDeCartoes;
    private java.awt.CardLayout gerenciadorDeLayouts;

    /**
     * Creates new form RecuperacaoDeSenhaView
     */
    public RecuperacaoDeSenhaView() {
        initComponents();
        addCustomEventListeners();
    }

    /**
     * Construtor para permitir a navegação entre telas.
     */
    public RecuperacaoDeSenhaView(JPanel painelDeCartoes, java.awt.CardLayout gerenciadorDeLayouts) {
        this(); // Chama o construtor padrão acima para montar os componentes
        this.painelDeCartoes = painelDeCartoes;
        this.gerenciadorDeLayouts = gerenciadorDeLayouts;
    }

    /**
     * Sobrescreve o método de pintura para desenhar um fundo com gradiente.
     */
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        Graphics2D g2d = (Graphics2D) g;
        int width = getWidth();
        int height = getHeight();
        Color color1 = new Color(9, 32, 63);
        Color color2 = new Color(21, 52, 98);
        GradientPaint gp = new GradientPaint(0, 0, color1, 0, height, color2);
        g2d.setPaint(gp);
        g2d.fillRect(0, 0, width, height);
    }

    private void addCustomEventListeners() {
        // Usando uma forma mais moderna (lambda) para adicionar os listeners
        btnVoltar.addActionListener(e -> voltarParaTelaAnterior());
        btnEnviarEmail.addActionListener(e -> enviarEmailRecuperacao());
        txtEmail.addActionListener(e -> enviarEmailRecuperacao());
    }

    /**
     * Inicia o processo de validação e envio de e-mail com feedback visual.
     */
    private void enviarEmailRecuperacao() {
        String email = txtEmail.getText().trim();

        if (email.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, insira seu endereço de e-mail.", "Erro de Validação", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!email.matches("^[\\w.-]+@[\\w.-]+\\.[a-zA-Z]{2,6}$")) {
            JOptionPane.showMessageDialog(this, "Formato de e-mail inválido. Por favor, verifique.", "Erro de Validação", JOptionPane.ERROR_MESSAGE);
            return;
        }

        btnEnviarEmail.setEnabled(false);
        btnEnviarEmail.setText("ENVIANDO...");

        EmailSenderWorker worker = new EmailSenderWorker(email);
        worker.execute();
    }
    
    /**
     * Lógica para voltar para a tela anterior (ex: tela de Login).
     */
    private void voltarParaTelaAnterior() {
        if (gerenciadorDeLayouts != null && painelDeCartoes != null) {
            gerenciadorDeLayouts.show(painelDeCartoes, "TELA_LOGIN");
        } else {
            // Este else é útil para testar a tela de forma isolada
            System.out.println("Navegação não configurada. O botão Voltar foi clicado.");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCaixaFundo = new javax.swing.JPanel();
        lblTituloTela = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnEnviarEmail = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        lblOrientacoes = new javax.swing.JLabel();
        lblLogoIF = new javax.swing.JLabel();
        lblIF = new javax.swing.JLabel();
        lblInformativo = new javax.swing.JLabel();

        pnlCaixaFundo.setBackground(new java.awt.Color(0, 0, 153));

        lblTituloTela.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblTituloTela.setForeground(new java.awt.Color(255, 255, 255));
        lblTituloTela.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTituloTela.setText("RELEMBRAR A SENHA");

        lblEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 255, 255));
        lblEmail.setText("E-mail");

        btnEnviarEmail.setBackground(new java.awt.Color(0, 102, 255));
        btnEnviarEmail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnEnviarEmail.setForeground(new java.awt.Color(255, 255, 255));
        btnEnviarEmail.setText("ENVIAR E-MAIL");
        btnEnviarEmail.setBorder(null);

        btnVoltar.setBackground(new java.awt.Color(153, 153, 153));
        btnVoltar.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnVoltar.setForeground(new java.awt.Color(255, 255, 255));
        btnVoltar.setText("VOLTAR");
        btnVoltar.setBorder(null);

        lblOrientacoes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblOrientacoes.setForeground(new java.awt.Color(204, 204, 204));
        lblOrientacoes.setText("<html><p align=\"center\"><b>Orientações:</b> Você receberá um e-mail com o link para alteração da senha.</p><br><p align=\"center\"><b>Atenção:</b> Verifique também a caixa de SPAM.</p></html>");

        javax.swing.GroupLayout pnlCaixaFundoLayout = new javax.swing.GroupLayout(pnlCaixaFundo);
        pnlCaixaFundo.setLayout(pnlCaixaFundoLayout);
        pnlCaixaFundoLayout.setHorizontalGroup(
            pnlCaixaFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCaixaFundoLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(pnlCaixaFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblEmail)
                    .addGroup(pnlCaixaFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(lblTituloTela, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnEnviarEmail, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblOrientacoes, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        pnlCaixaFundoLayout.setVerticalGroup(
            pnlCaixaFundoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCaixaFundoLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(lblTituloTela, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(lblEmail)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEnviarEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(lblOrientacoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(btnVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41))
        );

        lblLogoIF.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/ifrologo.png"))); // Lembre-se de ter essa imagem na sua pasta /icons

        lblIF.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        lblIF.setForeground(new java.awt.Color(255, 255, 255));
        lblIF.setText("INSTITUTO FEDERAL");

        lblInformativo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblInformativo.setForeground(new java.awt.Color(204, 204, 204));
        lblInformativo.setText("<html> Acreditamos que a participação democrática é fundamental para o fortalecimento da nossa comunidade acadêmica, seja na eleição de representantes, na escolha de datas para eventos, em decisões coletivas ou consultas internas. Por isso, criamos um sistema de votação que combina segurança, transparência e acessibilidade, de forma simples e confiável. <br><br> Eleições seguras, privadas e verificáveis. Sua voz importa. Sua escolha é protegida. </html>");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addComponent(pnlCaixaFundo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(80, 80, 80)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblLogoIF)
                        .addGap(18, 18, 18)
                        .addComponent(lblIF, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblInformativo, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlCaixaFundo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLogoIF)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(lblIF)))
                        .addGap(39, 39, 39)
                        .addComponent(lblInformativo, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap(120, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnviarEmailActionPerformed(java.awt.event.ActionEvent evt) {                                               
        enviarEmailRecuperacao();
    }                                              

    private void txtEmailActionPerformed(java.awt.event.ActionEvent evt) {                                         
        enviarEmailRecuperacao();
    }                                        

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {                                          
        voltarParaTelaAnterior();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviarEmail;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblIF;
    private javax.swing.JLabel lblInformativo;
    private javax.swing.JLabel lblLogoIF;
    private javax.swing.JLabel lblOrientacoes;
    private javax.swing.JLabel lblTituloTela;
    private javax.swing.JPanel pnlCaixaFundo;
    private javax.swing.JTextField txtEmail;
    // End of variables declaration//GEN-END:variables

    // Classe interna para o envio de e-mail em segundo plano
    private class EmailSenderWorker extends SwingWorker<Boolean, Void> {

        private final String email;

        public EmailSenderWorker(String email) {
            this.email = email;
        }
        
        private boolean simularEnvioEmail(String email) {
            if (email.equalsIgnoreCase("erro@teste.com")) {
                return false;
            }
            return true;
        }

        @Override
        protected Boolean doInBackground() throws Exception {
            try {
                Thread.sleep(2000); // Simula espera de 2 segundos
            } catch (InterruptedException e) {
                // Tratar exceção se necessário
            }
            return simularEnvioEmail(email);
        }

        @Override
        protected void done() {
            try {
                boolean emailEnviadoComSucesso = get();
                if (emailEnviadoComSucesso) {
                    JOptionPane.showMessageDialog(RecuperacaoDeSenhaView.this,
                            "Um e-mail com as instruções de recuperação foi enviado para:\n" + email +
                            "\nVerifique sua caixa de entrada, incluindo a pasta de SPAM.",
                            "E-mail Enviado!",
                            JOptionPane.INFORMATION_MESSAGE);
                    txtEmail.setText("");
                } else {
                    JOptionPane.showMessageDialog(RecuperacaoDeSenhaView.this,
                            "Não foi possível enviar o e-mail de recuperação.\nVerifique o e-mail digitado ou tente novamente mais tarde.",
                            "Erro ao Enviar E-mail",
                            JOptionPane.ERROR_MESSAGE);
                }
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(RecuperacaoDeSenhaView.this, "Ocorreu um erro inesperado.", "Erro", JOptionPane.ERROR_MESSAGE);
            } finally {
                btnEnviarEmail.setText("ENVIAR E-MAIL");
                btnEnviarEmail.setEnabled(true);
            }
        }
    }
}
